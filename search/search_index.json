{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Welcome to Nicholas's Project Template","text":"<p>This is a repository that stores my repo template. This provides scripts to generate a new repo as well as to apply the template to an existing repo.</p>"},{"location":"index.html#feature-overview","title":"Feature Overview","text":""},{"location":"index.html#template-project","title":"Template Project","text":"<p>The template repo provides a number of useful features:</p> <ul> <li><code>.gitignore</code> and <code>.gitattributes</code> with sensible defaults</li> <li><code>LICENSE</code>, <code>README.md</code>, and <code>CHANGELOG.md</code> files</li> <li>A pre-configured mkdocs skeleton site</li> <li>Platform-agnostic scripts for bootstrapping the repo and viewing the site locally</li> <li>A pre-configured CI to deploy the static mkdocs site</li> <li>Built-in run configurations for JetBrains IDEs</li> </ul>"},{"location":"index.html#generation-script","title":"Generation Script","text":"<p>The generation script provides the following features:</p> <ul> <li>Automatic bootstrapping of new repos by initializing Git and building virtual environments</li> <li>Template-based repo generation</li> </ul>"},{"location":"usage.html","title":"Usage","text":"<p>This project provides a self-bootstrapping CLI. On first use it creates and manages an isolated virtual environment for its own dependencies, so you don\u2019t need to manually install libraries like Jinja.</p>"},{"location":"usage.html#requirements","title":"Requirements","text":"<ul> <li>Git</li> <li>Python</li> <li>Task</li> </ul>"},{"location":"usage.html#quickstart","title":"Quickstart","text":""},{"location":"usage.html#clone-the-template-repository","title":"Clone the template repository:","text":"<pre><code>git clone git@github.com:nicholasgrose/project_template.git\ncd project_template\n</code></pre>"},{"location":"usage.html#use-the-cli-from-the-repo-root","title":"Use the CLI from the repo root","text":"<p>You can see the help text by running:</p> <pre><code>python ./generate.py --help\n</code></pre> <p>On the first run, the CLI will:</p> <ul> <li>Create a virtual environment in its directory.</li> <li>Install the CLI\u2019s pinned dependencies into that environment.</li> <li>Re-run the command under that environment automatically.</li> </ul> <p>Subsequent runs reuse the environment.</p>"},{"location":"usage.html#example-usage","title":"Example Usage","text":""},{"location":"usage.html#create-a-new-project-from-the-template","title":"Create a new project from the template","text":"<p>You can create a new project from the template by running the following command:</p> <pre><code>python generate.py new --path projects/new_repo\n</code></pre>"},{"location":"usage.html#cli-options","title":"CLI Options","text":"Option Default? Description --template <code>general</code> The project template to use (only \"general\" is valid at this time) --path Prompts User Specifies the path to create to the new project --project-name Prompts User The name of the project to create --repo-name Prompts User The name of the repo to create --author Prompts User The name of the repo's author --repo-url Prompts User The URL to the repo --repo-remote-url Prompts User The remote URL for pushing the repo to Git --repo-docs-url Prompts User The URL for the project docs --contact-email Prompts User The email for contact --security-email Prompts User The email for reporting sensitive issues -n <code>None</code> Answer NO to all overwrite prompts -y <code>None</code> Answer YES to all overwrite prompts --dry-run <code>False</code> Whether to describe the changes that will be made without making any"},{"location":"usage.html#add-to-an-existing-project","title":"Add to an existing project","text":"<p>Warning</p> <p>This has the potential to overwrite files in the project. If you are doing this, have any changes committed so you can revert any unintentional changes.</p> <p>You can add the template to an existing project by running the following command:</p> <pre><code>python generate.py add --path projects/existing_repo\n</code></pre>"},{"location":"usage.html#cli-options_1","title":"CLI Options","text":"Option Default? Description --template <code>general</code> The project template to use (only \"general\" is valid at this time) --path <code>.</code> Specifies the path to the project to add the template to --project-name Prompts User The name of the project being added to --repo-name Prompts User The name of the repo --author Prompts User The name of the repo's author --repo-url Prompts User The URL to the repo --repo-remote-url Prompts User The remote URL for pushing the repo to Git --repo-docs-url Prompts User The URL for the project docs --contact-email Prompts User The email for contact --security-email Prompts User The email for reporting sensitive issues -n <code>None</code> Answer NO to all overwrite prompts -y <code>None</code> Answer YES to all overwrite prompts --dry-run <code>False</code> Whether to describe the changes that will be made without making any"}]}